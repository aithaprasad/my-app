{"version":3,"sources":["components/Search.js","components/Table.js","App.js","reportWebVitals.js","index.js"],"names":["Search","onSearch","useState","search","setSearch","type","style","width","height","placeholder","value","onChange","e","target","Table","data","setData","setErrors","a","fetch","json","then","res","Array","from","Countries","catch","err","useEffect","fetchData","filterData","useMemo","filteredData","filter","comment","Country","toLowerCase","includes","className","length","colSpan","map","droplet","TotalConfirmed","TotalRecovered","TotalDeaths","CountryCode","App","title","color","radius","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"8PAmBeA,EAjBA,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SAAe,EACHC,mBAAS,IADN,mBACxBC,EADwB,KAChBC,EADgB,KAM/B,OACE,uBACEC,KAAK,OACLC,MAAO,CAAEC,MAAO,QAASC,OAAQ,QACjCC,YAAY,SACZC,MAAOP,EACPQ,SAAU,SAACC,GAAD,OAVSF,EAUYE,EAAEC,OAAOH,MAT1CN,EAAUM,QACVT,EAASS,GAFW,IAACA,MC8EVI,G,MA7ED,WAAO,IAAD,EACMZ,mBAAS,IADf,mBACXa,EADW,KACLC,EADK,OAGYd,oBAAS,GAHrB,mBAGDe,GAHC,aAIUf,mBAAS,IAJnB,mBAIXC,EAJW,KAIHC,EAJG,iDAMlB,sBAAAc,EAAA,sEACoBC,MAAM,sCAD1B,cAGKC,OACAC,MAAK,SAACC,GAAD,OAASN,EAAQO,MAAMC,KAAKF,EAAIG,eACrCC,OAAM,SAACC,GAAD,OAASV,EAAUU,MAL9B,4CANkB,sBAclBC,qBAAU,YAdQ,mCAehBC,KACC,IAEH,IAAMC,EAAaC,mBAAQ,WACzB,IAAIC,EAAejB,EASnB,OAPIZ,IAEF6B,EAAeA,EAAaC,QAAO,SAACC,GAAD,OACjCA,EAAQC,QAAQC,cAAcC,SAASlC,EAAOiC,mBAI3Cb,MAAMC,KAAKQ,KACjB,CAACjB,EAAMZ,IAEV,OACE,qCACE,qBAAKmC,UAAU,WAAf,SACE,cAAC,EAAD,CACErC,SAAU,SAACS,GACTN,EAAUM,QAIhB,gCAAQ,2CACR,wBAAO4B,UAAU,WAAjB,UACE,gCACGR,EAAWS,OAAS,EACnB,+BACE,sCACA,2CACA,2CACA,2CAGF,6BACE,oBAAIC,QAAQ,IAAZ,qCAIN,gCACGV,EAAWS,OAAS,EACnBT,EAAWW,KAAI,SAACC,GACd,OACE,+BACE,oBAAIJ,UAAU,UAAd,SAAyBI,EAAQP,UACjC,6BAAKO,EAAQC,iBACb,6BAAKD,EAAQE,iBACb,6BAAKF,EAAQG,gBAJNH,EAAQI,gBASrB,iC,eC5CGC,EA3BH,WACV,OACE,sBAAKT,UAAU,MAAf,UACE,wDACA,sBAAKA,UAAU,UAAf,UACE,cAAC,WAAD,CACEvB,KAAM,CACJ,CAAEiC,MAAO,SAAUtC,MAAO,QAASuC,MAAO,WAC1C,CAAED,MAAO,YAAatC,MAAO,SAAUuC,MAAO,WAC9C,CAAED,MAAO,SAAUtC,MAAO,SAAUuC,MAAO,YAE7CC,OAAQ,KAGV,gCACE,oBAAIZ,UAAU,MAAd,8BAEA,oBAAIA,UAAU,QAAd,kCAEA,oBAAIA,UAAU,OAAd,qCAGJ,cAAC,EAAD,QCbSa,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBhC,MAAK,YAAkD,IAA/CiC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.39551655.chunk.js","sourcesContent":["import React, { useState } from \"react\";\r\n\r\nconst Search = ({ onSearch }) => {\r\n  const [search, setSearch] = useState(\"\");\r\n  const onInputChange = (value) => {\r\n    setSearch(value);\r\n    onSearch(value);\r\n  };\r\n  return (\r\n    <input\r\n      type=\"text\"\r\n      style={{ width: \"240px\", height: \"24px\" }}\r\n      placeholder=\"Search\"\r\n      value={search}\r\n      onChange={(e) => onInputChange(e.target.value)}\r\n    />\r\n  );\r\n};\r\n\r\nexport default Search;\r\n","//import React from \"react\";\r\nimport React, { useState, useEffect, useMemo } from \"react\";\r\nimport Search from \"./Search.js\";\r\nimport \"./Table.css\";\r\n\r\nconst Table = () => {\r\n  const [data, setData] = useState({});\r\n  // eslint-disable-next-line no-unused-vars\r\n  const [hasError, setErrors] = useState(false);\r\n  const [search, setSearch] = useState(\"\");\r\n\r\n  async function fetchData() {\r\n    const res = await fetch(\"https://api.covid19api.com/summary\");\r\n    res\r\n      .json()\r\n      .then((res) => setData(Array.from(res.Countries)))\r\n      .catch((err) => setErrors(err));\r\n  }\r\n\r\n  useEffect(() => {\r\n    fetchData();\r\n  }, []);\r\n\r\n  const filterData = useMemo(() => {\r\n    let filteredData = data;\r\n\r\n    if (search) {\r\n      //console.log(search);\r\n      filteredData = filteredData.filter((comment) =>\r\n        comment.Country.toLowerCase().includes(search.toLowerCase())\r\n      );\r\n      //console.log(filteredData.slice(0, 5));\r\n    }\r\n    return Array.from(filteredData);\r\n  }, [data, search]);\r\n\r\n  return (\r\n    <>\r\n      <div className=\"Tabletop\">\r\n        <Search\r\n          onSearch={(value) => {\r\n            setSearch(value);\r\n          }}\r\n        />\r\n      </div>\r\n      <style>{\"table, th, td{border:1px solid black;}\"}</style>\r\n      <table className=\"Tabletop\">\r\n        <thead>\r\n          {filterData.length > 0 ? (\r\n            <tr>\r\n              <th>Name</th>\r\n              <th>Confirmed</th>\r\n              <th>Recovered</th>\r\n              <th>Deaths</th>\r\n            </tr>\r\n          ) : (\r\n            <tr>\r\n              <td colSpan=\"5\">No Matches Found...</td>\r\n            </tr>\r\n          )}\r\n        </thead>\r\n        <tbody>\r\n          {filterData.length > 0 ? (\r\n            filterData.map((droplet) => {\r\n              return (\r\n                <tr key={droplet.CountryCode}>\r\n                  <td className=\"Country\">{droplet.Country}</td>\r\n                  <td>{droplet.TotalConfirmed}</td>\r\n                  <td>{droplet.TotalRecovered}</td>\r\n                  <td>{droplet.TotalDeaths}</td>\r\n                </tr>\r\n              );\r\n            })\r\n          ) : (\r\n            <tr></tr>\r\n          )}\r\n        </tbody>\r\n      </table>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Table;\r\n","import Table from \"./components/Table.js\";\nimport \"./App.css\";\nimport { PieChart } from \"react-minimal-pie-chart\";\nconst App = () => {\n  return (\n    <div className=\"App\">\n      <h1>Covid World Statistics</h1>\n      <div className=\"FullApp\">\n        <PieChart\n          data={[\n            { title: \"Deaths\", value: 1431955, color: \"#CD5C5C\" },\n            { title: \"Recovered\", value: 39062353, color: \"#2E8B57\" },\n            { title: \"Active\", value: 60964864, color: \"#1E90FF\" },\n          ]}\n          radius={30}\n        />\n\n        <div>\n          <h5 className=\"Red\">Deaths 1,431,955</h5>\n\n          <h5 className=\"Green\">Recovered 39,062,353</h5>\n\n          <h5 className=\"Blue\">Active 60,964,864</h5>\n        </div>\n      </div>\n      <Table />\n    </div>\n  );\n};\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}